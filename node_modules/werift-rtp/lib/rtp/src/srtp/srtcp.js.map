{"version":3,"file":"srtcp.js","sourceRoot":"","sources":["../../../../src/srtp/srtcp.ts"],"names":[],"mappings":";;;AAAA,2CAA+C;AAC/C,uCAAiD;AAEjD,MAAa,YAAa,SAAQ,iBAAqB;IACrD,YAAmB,MAAc;QAC/B,KAAK,CAAC,oBAAY,CAAC,CAAC;QADV;;;;mBAAO,MAAM;WAAQ;QAYjC;;;;mBAAU,CAAC,GAAW,EAAE,EAAE;gBACxB,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACxD,OAAO,SAAS,CAAC;YACnB,CAAC;WAAC;QAZA,IAAI,CAAC,KAAK,CACR,MAAM,CAAC,IAAI,CAAC,cAAc,EAC1B,MAAM,CAAC,IAAI,CAAC,eAAe,EAC3B,MAAM,CAAC,IAAI,CAAC,eAAe,EAC3B,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAC5B,MAAM,CAAC,OAAO,CACf,CAAC;IACJ,CAAC;IAOD,OAAO,CAAC,OAAe;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACnD,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAtBD,oCAsBC","sourcesContent":["import { SrtcpContext } from \"./context/srtcp\";\nimport { type Config, Session } from \"./session\";\n\nexport class SrtcpSession extends Session<SrtcpContext> {\n  constructor(public config: Config) {\n    super(SrtcpContext);\n\n    this.start(\n      config.keys.localMasterKey,\n      config.keys.localMasterSalt,\n      config.keys.remoteMasterKey,\n      config.keys.remoteMasterSalt,\n      config.profile,\n    );\n  }\n\n  decrypt = (buf: Buffer) => {\n    const [decrypted] = this.remoteContext.decryptRTCP(buf);\n    return decrypted;\n  };\n\n  encrypt(rawRtcp: Buffer) {\n    const enc = this.localContext.encryptRTCP(rawRtcp);\n    return enc;\n  }\n}\n"]}