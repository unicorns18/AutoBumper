{"version":3,"file":"webmCallback.js","sourceRoot":"","sources":["../../../../../src/extra/processor/webmCallback.ts"],"names":[],"mappings":";;;AAAA,0CAAqD;AAErD,6BAAqC;AACrC,iCASgB;AAEhB,MAAa,YAAa,SAAQ,eAAQ;IAGxC,YAAY,MAAmB,EAAE,UAAsB,EAAE;QACvD,KAAK,CACH,MAAM,EACN,KAAK,EAAE,MAAM,EAAE,EAAE;YACf,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,IAAI,EAAE,EAAE,CAAC;gBACP,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC,EACD,OAAO,CACR,CAAC;QAZI;;;;;WAA0C;QAC1C;;;;mBAAQ,IAAI,gBAAY,EAAE;WAAC;QAcnC;;;;mBAAO,CAAC,EAAuC,EAAE,EAAE;gBACjD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;WAAC;QAEF;;;;mBAAa,CAAC,KAAgB,EAAE,EAAE;gBAChC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;WAAC;QACF;;;;mBAAa,CAAC,KAAgB,EAAE,EAAE;gBAChC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;WAAC;QAEF;;;;mBAAU,GAAG,EAAE;gBACb,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACtB,CAAC;WAAC;IAjBF,CAAC;CAkBF;AAhCD,oCAgCC;AAED;;;;GAIG;AACI,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,KAAK,EAAE,KAAiB,EAAE,EAAE;IAC5E,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;QACrB,MAAM,IAAA,qBAAU,EAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QAEzC,OAAO,KAAK,CAAC;IACf,CAAC;SAAM,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;QACrB,MAAM,EAAE,eAAe,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;QACtC,MAAM,OAAO,GAAG,MAAM,IAAA,eAAI,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEvC,eAAe;QACf,MAAM,OAAO,CAAC,KAAK,CACjB,eAAe,EACf,CAAC,EACD,eAAe,CAAC,MAAM,EACtB,uBAAgB,CACjB,CAAC;QAEF,WAAW;QACX,MAAM,IAAI,GAAG,MAAM,IAAA,eAAI,EAAC,IAAI,CAAC,CAAC;QAC9B,MAAM,MAAM,GAAG,IAAA,yBAAkB,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,0BAAmB,CAAC,CAAC;QAEnE,MAAM,OAAO,CAAC,KAAK,EAAE,CAAC;QAEtB,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AA1BW,QAAA,gBAAgB,oBA0B3B","sourcesContent":["import { appendFile, open, stat } from \"fs/promises\";\n\nimport { PromiseQueue } from \"../..\";\nimport {\n  DurationPosition,\n  SegmentSizePosition,\n  WebmBase,\n  type WebmInput,\n  type WebmOption,\n  type WebmOutput,\n  type WebmTrack,\n  replaceSegmentSize,\n} from \"./webm\";\n\nexport class WebmCallback extends WebmBase {\n  private cb?: (input: WebmOutput) => Promise<void>;\n  private queue = new PromiseQueue();\n  constructor(tracks: WebmTrack[], options: WebmOption = {}) {\n    super(\n      tracks,\n      async (output) => {\n        const cb = this.cb;\n        if (cb) {\n          await this.queue.push(() => cb(output));\n        }\n      },\n      options,\n    );\n  }\n\n  pipe = (cb: (input: WebmOutput) => Promise<any>) => {\n    this.cb = cb;\n    this.start();\n  };\n\n  inputAudio = (input: WebmInput) => {\n    this.processAudioInput(input);\n  };\n  inputVideo = (input: WebmInput) => {\n    this.processVideoInput(input);\n  };\n\n  destroy = () => {\n    this.cb = undefined;\n    this.queue.cancel();\n  };\n}\n\n/**\n *\n * @param path\n * @returns eol\n */\nexport const saveToFileSystem = (path: string) => async (value: WebmOutput) => {\n  if (value.saveToFile) {\n    await appendFile(path, value.saveToFile);\n\n    return false;\n  } else if (value.eol) {\n    const { durationElement } = value.eol;\n    const handler = await open(path, \"r+\");\n\n    // set duration\n    await handler.write(\n      durationElement,\n      0,\n      durationElement.length,\n      DurationPosition,\n    );\n\n    // set size\n    const meta = await stat(path);\n    const resize = replaceSegmentSize(meta.size);\n    await handler.write(resize, 0, resize.length, SegmentSizePosition);\n\n    await handler.close();\n\n    return true;\n  }\n};\n"]}