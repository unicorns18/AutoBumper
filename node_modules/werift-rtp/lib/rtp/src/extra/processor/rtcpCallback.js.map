{"version":3,"file":"rtcpCallback.js","sourceRoot":"","sources":["../../../../../src/extra/processor/rtcpCallback.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAY7C,MAAa,kBAAkB;IAA/B;QAGU;;;;;WAAiC;QACjC;;;;;WAAwB;QAChC;;;;mBAAY,IAAI,cAAK,EAAE;WAAC;QAYxB;;;;mBAAQ,CAAC,IAAe,EAAE,EAAE;gBAC1B,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;oBACZ,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;gBACpB,CAAC;YACH,CAAC;WAAC;QASF;;;;mBAAU,GAAG,EAAE;gBACb,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC9B,CAAC;gBACD,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;YAClC,CAAC;WAAC;IACJ,CAAC;IA/BC,MAAM;QACJ,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,CAAC,EAA+B,EAAE,UAAuB;QAC3D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IAQD,IAAI;QACF,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;YACZ,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CAUF;AAtCD,gDAsCC","sourcesContent":["import { Event } from \"../../imports/common\";\n\nimport type { RtcpPacket } from \"../..\";\nimport type { SimpleProcessorCallback } from \"./interface\";\n\nexport type RtcpInput = RtcpPacket;\n\nexport interface RtcpOutput {\n  rtcp?: RtcpPacket;\n  eol?: boolean;\n}\n\nexport class RtcpSourceCallback\n  implements SimpleProcessorCallback<RtcpInput, RtcpOutput>\n{\n  private cb?: (chunk: RtcpOutput) => void;\n  private destructor?: () => void;\n  onStopped = new Event();\n\n  toJSON() {\n    return {};\n  }\n\n  pipe(cb: (chunk: RtcpOutput) => void, destructor?: () => void) {\n    this.cb = cb;\n    this.destructor = destructor;\n    return this;\n  }\n\n  input = (rtcp: RtcpInput) => {\n    if (this.cb) {\n      this.cb({ rtcp });\n    }\n  };\n\n  stop() {\n    if (this.cb) {\n      this.cb({ eol: true });\n    }\n    this.onStopped.execute();\n  }\n\n  destroy = () => {\n    if (this.destructor) {\n      this.destructor();\n      this.destructor = undefined;\n    }\n    this.cb = undefined;\n    this.onStopped.allUnsubscribe();\n  };\n}\n"]}