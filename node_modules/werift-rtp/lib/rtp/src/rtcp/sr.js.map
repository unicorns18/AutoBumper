{"version":3,"file":"sr.js","sourceRoot":"","sources":["../../../../src/rtcp/sr.ts"],"names":[],"mappings":"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","sourcesContent":["import { bufferReader, bufferWriter } from \"../../../common/src\";\nimport { RtcpReceiverInfo } from \"./rr\";\nimport { RtcpPacketConverter } from \"./rtcp\";\n\n// https://datatracker.ietf.org/doc/html/rfc3550#section-6.4.1\n//         0                   1                   2                   3\n//         0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// header |V=2|P|    RC   |   PT=SR=200   |             length            |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                         SSRC of sender                        |\n//        +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n// sender |              NTP timestamp, most significant word             |\n// info   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |             NTP timestamp, least significant word             |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                         RTP timestamp                         |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                     sender's packet count                     |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                      sender's octet count                     |\n//        +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n// report |                 SSRC_1 (SSRC of first source)                 |\n// block  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//   1    | fraction lost |       cumulative number of packets lost       |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |           extended highest sequence number received           |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                      interarrival jitter                      |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                         last SR (LSR)                         |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//        |                   delay since last SR (DLSR)                  |\n//        +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n// report |                 SSRC_2 (SSRC of second source)                |\n// block  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n//   2    :                               ...                             :\n//        +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n//        |                  profile-specific extensions                  |\n//        +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nexport class RtcpSrPacket {\n  ssrc = 0;\n  senderInfo!: RtcpSenderInfo;\n  reports: RtcpReceiverInfo[] = [];\n  static readonly type = 200;\n  readonly type = RtcpSrPacket.type;\n\n  constructor(props: Pick<RtcpSrPacket, \"senderInfo\"> & Partial<RtcpSrPacket>) {\n    Object.assign(this, props);\n  }\n\n  toJSON() {\n    return {\n      ssrc: this.ssrc,\n      senderInfo: this.senderInfo.toJSON(),\n      reports: this.reports.map((r) => r.toJSON()),\n    };\n  }\n\n  serialize() {\n    let payload = Buffer.alloc(4);\n    payload.writeUInt32BE(this.ssrc);\n    payload = Buffer.concat([payload, this.senderInfo.serialize()]);\n    payload = Buffer.concat([\n      payload,\n      ...this.reports.map((report) => report.serialize()),\n    ]);\n    return RtcpPacketConverter.serialize(\n      RtcpSrPacket.type,\n      this.reports.length,\n      payload,\n      Math.floor(payload.length / 4),\n    );\n  }\n\n  static deSerialize(payload: Buffer, count: number) {\n    const ssrc = payload.readUInt32BE();\n    const senderInfo = RtcpSenderInfo.deSerialize(payload.subarray(4, 24));\n    let pos = 24;\n    const reports: RtcpReceiverInfo[] = [];\n    for (let _ = 0; _ < count; _++) {\n      reports.push(\n        RtcpReceiverInfo.deSerialize(payload.subarray(pos, pos + 24)),\n      );\n      pos += 24;\n    }\n    const packet = new RtcpSrPacket({ ssrc, senderInfo, reports });\n    return packet;\n  }\n}\n\nexport class RtcpSenderInfo {\n  ntpTimestamp!: bigint;\n  rtpTimestamp!: number;\n  packetCount!: number;\n  octetCount!: number;\n\n  constructor(props: Partial<RtcpSenderInfo> = {}) {\n    Object.assign(this, props);\n  }\n\n  toJSON() {\n    return {\n      ntpTimestamp: ntpTime2Sec(this.ntpTimestamp),\n      rtpTimestamp: this.rtpTimestamp,\n    };\n  }\n\n  serialize() {\n    return bufferWriter(\n      [8, 4, 4, 4],\n      [this.ntpTimestamp, this.rtpTimestamp, this.packetCount, this.octetCount],\n    );\n  }\n\n  static deSerialize(data: Buffer) {\n    const [ntpTimestamp, rtpTimestamp, packetCount, octetCount] = bufferReader(\n      data,\n      [8, 4, 4, 4],\n    );\n\n    return new RtcpSenderInfo({\n      ntpTimestamp,\n      rtpTimestamp,\n      packetCount,\n      octetCount,\n    });\n  }\n}\n\nexport const ntpTime2Sec = (ntp: bigint) => {\n  const [ntpSec, ntpMsec] = bufferReader(bufferWriter([8], [ntp]), [4, 4]);\n\n  return Number(`${ntpSec}.${ntpMsec}`);\n};\n"]}