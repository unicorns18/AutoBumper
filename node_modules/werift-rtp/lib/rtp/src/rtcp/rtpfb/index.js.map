{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/rtcp/rtpfb/index.ts"],"names":[],"mappings":";;;AAAA,iDAA6C;AAE7C,iCAAqC;AACrC,iCAAyC;AAEzC,MAAM,GAAG,GAAG,IAAA,cAAK,EAAC,0CAA0C,CAAC,CAAC;AAgB9D,MAAa,0BAA0B;IAMrC,YAAY,QAA6C,EAAE;QAJlD;;;;mBAAO,0BAA0B,CAAC,IAAI;WAAC;QAChD;;;;;WAAoB;QACpB;;;;;WAAoB;QAGlB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1C,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,MAAkB;QACjD,IAAI,QAA8B,CAAC;QAEnC,QAAQ,MAAM,CAAC,KAAK,EAAE,CAAC;YACrB,KAAK,kBAAW,CAAC,KAAK;gBACpB,QAAQ,GAAG,kBAAW,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACjD,MAAM;YACR,KAAK,sBAAe,CAAC,KAAK;gBACxB,QAAQ,GAAG,sBAAe,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACrD,MAAM;YACR;gBACE,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM;QACV,CAAC;QAED,OAAO,IAAI,0BAA0B,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,CAAC;;AA/BH,gEAgCC;AA/BiB;;;;WAAO,GAAG;EAAN,CAAO","sourcesContent":["import { debug } from \"../../imports/common\";\nimport type { RtcpHeader } from \"../header\";\nimport { GenericNack } from \"./nack\";\nimport { TransportWideCC } from \"./twcc\";\n\nconst log = debug(\"werift-rtp:packages/rtp/rtcp/rtpfb/index\");\n\n// 0                   1                   2                   3\n// 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// |V=2|P|   FMT   |       PT      |          length               |\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// |                  SSRC of packet sender                        |\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// |                  SSRC of media source                         |\n// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n// :            Feedback Control Information (FCI)                 :\n// :                                                               :\n\ntype Feedback = GenericNack | TransportWideCC;\n\nexport class RtcpTransportLayerFeedback {\n  static readonly type = 205;\n  readonly type = RtcpTransportLayerFeedback.type;\n  feedback!: Feedback;\n  header!: RtcpHeader;\n\n  constructor(props: Partial<RtcpTransportLayerFeedback> = {}) {\n    Object.assign(this, props);\n  }\n\n  serialize() {\n    const payload = this.feedback.serialize();\n    return payload;\n  }\n\n  static deSerialize(data: Buffer, header: RtcpHeader) {\n    let feedback: Feedback | undefined;\n\n    switch (header.count) {\n      case GenericNack.count:\n        feedback = GenericNack.deSerialize(data, header);\n        break;\n      case TransportWideCC.count:\n        feedback = TransportWideCC.deSerialize(data, header);\n        break;\n      default:\n        log(\"unknown rtpfb packet\", header.count);\n        break;\n    }\n\n    return new RtcpTransportLayerFeedback({ feedback, header });\n  }\n}\n"]}