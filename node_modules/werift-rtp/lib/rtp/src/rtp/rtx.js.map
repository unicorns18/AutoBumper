{"version":3,"file":"rtx.js","sourceRoot":"","sources":["../../../../src/rtp/rtx.ts"],"names":[],"mappings":";;AAIA,8BAYC;AAED,0BAsBC;AAxCD,iDAA8C;AAE9C,+BAA6C;AAE7C,SAAgB,SAAS,CAAC,GAAc,EAAE,WAAmB,EAAE,IAAY;IACzE,MAAM,MAAM,GAAG,IAAI,eAAS,CAC1B,IAAI,eAAS,CAAC;QACZ,WAAW;QACX,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM;QACzB,cAAc,EAAE,eAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;QAC/B,IAAI;KACL,CAAC,EACF,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CACxB,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,OAAO,CACrB,MAAiB,EACjB,WAAmB,EACnB,cAAsB,EACtB,IAAY;IAEZ,MAAM,GAAG,GAAG,IAAI,eAAS,CACvB,IAAI,eAAS,CAAC;QACZ,WAAW;QACX,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;QAC5B,cAAc;QACd,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS;QAClC,IAAI;QACJ,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI;QACxB,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU;KACrC,CAAC,EACF,MAAM,CAAC,MAAM,CAAC;QACZ,MAAM,CAAC,IAAI,CAAC,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO;KACf,CAAC,CACH,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { jspack } from \"@shinyoshiaki/jspack\";\n\nimport { RtpHeader, RtpPacket } from \"./rtp\";\n\nexport function unwrapRtx(rtx: RtpPacket, payloadType: number, ssrc: number) {\n  const packet = new RtpPacket(\n    new RtpHeader({\n      payloadType,\n      marker: rtx.header.marker,\n      sequenceNumber: jspack.Unpack(\"!H\", rtx.payload.subarray(0, 2))[0],\n      timestamp: rtx.header.timestamp,\n      ssrc,\n    }),\n    rtx.payload.subarray(2),\n  );\n  return packet;\n}\n\nexport function wrapRtx(\n  packet: RtpPacket,\n  payloadType: number,\n  sequenceNumber: number,\n  ssrc: number,\n) {\n  const rtx = new RtpPacket(\n    new RtpHeader({\n      payloadType,\n      marker: packet.header.marker,\n      sequenceNumber,\n      timestamp: packet.header.timestamp,\n      ssrc,\n      csrc: packet.header.csrc,\n      extensions: packet.header.extensions,\n    }),\n    Buffer.concat([\n      Buffer.from(jspack.Pack(\"!H\", [packet.header.sequenceNumber])),\n      packet.payload,\n    ]),\n  );\n  return rtx;\n}\n"]}